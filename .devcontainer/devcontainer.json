// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.154.0/containers/docker-existing-dockerfile
{
	"name": "Existing Dockerfile",

	// Sets the run context to one level up instead of the .devcontainer folder.
	"context": "..",

	// Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
	"dockerFile": "../Dockerfile",

	// Set *default* container specific settings.json values on container create.
	"settings": { 
		"terminal.integrated.shell.linux": null
	},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [ "ms-vscode.cpptools", "twxs.cmake", "ms-vscode.cmake-tools" ],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Uncomment the next line to run commands after the container is created - for example installing curl.
	// "postCreateCommand": "apt-get update && apt-get install -y curl",

	// Run this command on the host before the container is created
	"initializeCommand": "xhost +SI:localuser:root",
	
	// The optional 'runArgs' property can be used to specify additional runtime arguments.
	"runArgs": [
		"--privileged",
		"-e", "DISPLAY=${env:DISPLAY}",
		"-v", "/tmp/.X11-unix:/tmp/.X11-unix",
		"--gpus", "all",
		// Uncomment the next line to use Docker from inside the container. See https://aka.ms/vscode-remote/samples/docker-in-docker for details.
		// "-v","/var/run/docker.sock:/var/run/docker.sock",

		// Uncomment the next line if you will be using a ptrace-based debugger like C++, Go, and Rust.
		"--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined"

		// You may want to add a non-root user to your Dockerfile. On Linux, this will prevent
		// new files getting created as root. See https://aka.ms/vscode-remote/containers/non-root-user
		// for the needed Dockerfile updates and then uncomment the next line.
		// "-u", "vscode"
	]

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	// "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],

	// Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
	// "remoteUser": "vscode"
}
